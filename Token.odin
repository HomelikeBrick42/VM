package vm

SourceLocation :: struct {
	filepath: string,
	position: uint,
	line:     uint,
	column:   uint,
}

TokenKind :: enum {
	EOF,
	Name,
	Label,
	Newline,
	Integer,
	Float,
	RZ,
	RIP,
	RFP,
	RSP,
	RA,
	RT,
	R1,
	R2,
	R3,
	R4,
	R5,
	R6,
	R7,
	R8,
	Exit,
	Goto,
	GotoIf,
	GotoIfZero,
	Jump,
	JumpIf,
	JumpIfZero,
	Load8,
	Load16,
	Load32,
	Load64,
	Store8,
	Store16,
	Store32,
	Store64,
	Push,
	Pop,
	Mov,
	EQ,
	NE,
	MovI,
	AddI,
	SubI,
	MulI,
	DivI,
	ModI,
	PrintI,
	LTI,
	LEI,
	MovF,
	AddF,
	SubF,
	MulF,
	DivF,
	LTF,
	LEF,
	PrintF,
}

token_kind_keywords := map[string]TokenKind {
	"rz"           = .RZ,
	"rip"          = .RIP,
	"rfp"          = .RFP,
	"rsp"          = .RSP,
	"ra"           = .RA,
	"rt"           = .RT,
	"r1"           = .R1,
	"r2"           = .R2,
	"r3"           = .R3,
	"r4"           = .R4,
	"r5"           = .R5,
	"r6"           = .R6,
	"r7"           = .R7,
	"r8"           = .R8,
	"exit"         = .Exit,
	"goto"         = .Goto,
	"goto_if"      = .GotoIf,
	"goto_if_zero" = .GotoIfZero,
	"jump"         = .Jump,
	"jump_if"      = .JumpIf,
	"jump_if_zero" = .JumpIfZero,
	"load8"        = .Load8,
	"load16"       = .Load16,
	"load32"       = .Load32,
	"load64"       = .Load64,
	"store8"       = .Store8,
	"store16"      = .Store16,
	"store32"      = .Store32,
	"store64"      = .Store64,
	"push"         = .Push,
	"pop"          = .Pop,
	"mov"          = .Mov,
	"eq"           = .EQ,
	"nq"           = .NE,
	"movi"         = .MovI,
	"addi"         = .AddI,
	"subi"         = .SubI,
	"muli"         = .MulI,
	"divi"         = .DivI,
	"modi"         = .ModI,
	"lti"          = .LTI,
	"lei"          = .LEI,
	"printi"       = .PrintI,
	"movf"         = .MovF,
	"addf"         = .AddF,
	"subf"         = .SubF,
	"mulf"         = .MulF,
	"divf"         = .DivF,
	"ltf"          = .LTF,
	"lef"          = .LEF,
	"printf"       = .PrintF,
}

Token :: struct {
	kind:           TokenKind,
	using location: SourceLocation,
	length:         uint,
	data:           union {
		u64,
		f64,
		string,
	},
}
